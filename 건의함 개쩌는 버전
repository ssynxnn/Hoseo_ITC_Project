I understand you want to use the same school suggestion box system in Python. I'll create a Flask web application that replicates the same functionality.

from flask import Flask, render_template, request, jsonify, redirect, url_for, session
from datetime import datetime
import json
import os

app = Flask(__name__)
app.secret_key = 'your-secret-key-here'  # 실제 환경에서는 더 안전한 키를 사용하세요

# 데이터 저장을 위한 파일 경로
DATA_FILE = 'suggestions.json'

# 관리자 계정 정보
ADMIN_CREDENTIALS = {
    'hoseogo': '12345'
}

# 카테고리 설정
CATEGORY_CONFIG = {
    'facility': {'icon': '🏢', 'color': 'bg-blue-100 text-blue-800', 'name': '시설 개선'},
    'restroom': {'icon': '🚻', 'color': 'bg-cyan-100 text-cyan-800', 'name': '학교 화장실'},
    'food': {'icon': '🍽️', 'color': 'bg-green-100 text-green-800', 'name': '급식 관련'},
    'trash': {'icon': '🗑️', 'color': 'bg-orange-100 text-orange-800', 'name': '쓰레기 문제'},
    'academic': {'icon': '📚', 'color': 'bg-purple-100 text-purple-800', 'name': '수업/학사'},
    'activity': {'icon': '🎭', 'color': 'bg-yellow-100 text-yellow-800', 'name': '동아리/활동'},
    'environment': {'icon': '🌱', 'color': 'bg-emerald-100 text-emerald-800', 'name': '학교 환경'},
    'safety': {'icon': '🛡️', 'color': 'bg-red-100 text-red-800', 'name': '안전 관련'},
    'library': {'icon': '📖', 'color': 'bg-indigo-100 text-indigo-800', 'name': '도서관'},
    'sports': {'icon': '⚽', 'color': 'bg-teal-100 text-teal-800', 'name': '체육/운동'},
    'other': {'icon': '💭', 'color': 'bg-gray-100 text-gray-800', 'name': '기타'}
}

# 상태 설정
STATUS_CONFIG = {
    'pending': {'color': 'bg-yellow-100 text-yellow-800', 'name': '검토중'},
    'in-progress': {'color': 'bg-blue-100 text-blue-800', 'name': '처리중'},
    'completed': {'color': 'bg-green-100 text-green-800', 'name': '완료'}
}

def load_suggestions():
    """건의사항 데이터를 파일에서 로드"""
    if os.path.exists(DATA_FILE):
        try:
            with open(DATA_FILE, 'r', encoding='utf-8') as f:
                return json.load(f)
        except:
            return []
    return []

def save_suggestions(suggestions):
    """건의사항 데이터를 파일에 저장"""
    with open(DATA_FILE, 'w', encoding='utf-8') as f:
        json.dump(suggestions, f, ensure_ascii=False, indent=2)

@app.route('/')
def index():
    """메인 페이지"""
    suggestions = load_suggestions()
    is_admin = session.get('is_admin', False)
    admin_id = session.get('admin_id', '')
    
    return render_template('index.html', 
                         suggestions=suggestions,
                         is_admin=is_admin,
                         admin_id=admin_id,
                         category_config=CATEGORY_CONFIG,
                         status_config=STATUS_CONFIG)

@app.route('/submit_suggestion', methods=['POST'])
def submit_suggestion():
    """건의사항 제출"""
    data = request.get_json()
    
    # 익명 처리
    is_anonymous = data.get('anonymous', False)
    student_name = '익명' if is_anonymous else (data.get('studentName') or '익명')
    student_grade = '' if is_anonymous else (data.get('studentGrade') or '')
    
    # 새 건의사항 생성
    suggestion = {
        'id': int(datetime.now().timestamp() * 1000),  # JavaScript의 Date.now()와 유사
        'studentName': student_name,
        'studentGrade': student_grade,
        'category': data.get('category'),
        'title': data.get('title'),
        'content': data.get('content'),
        'status': 'pending',
        'createdAt': datetime.now().strftime('%Y. %m. %d. %H:%M:%S'),
        'adminResponse': '',
        'responseDate': ''
    }
    
    # 데이터 로드 및 저장
    suggestions = load_suggestions()
    suggestions.insert(0, suggestion)  # 최신 건의사항을 맨 앞에 추가
    save_suggestions(suggestions)
    
    return jsonify({'success': True, 'message': '건의사항이 성공적으로 제출되었습니다!'})

@app.route('/admin_login', methods=['POST'])
def admin_login():
    """관리자 로그인"""
    data = request.get_json()
    admin_id = data.get('adminId')
    password = data.get('password')
    
    if admin_id in ADMIN_CREDENTIALS and ADMIN_CREDENTIALS[admin_id] == password:
        session['is_admin'] = True
        session['admin_id'] = admin_id
        return jsonify({'success': True})
    else:
        return jsonify({'success': False, 'message': '아이디 또는 비밀번호가 올바르지 않습니다.'})

@app.route('/admin_logout', methods=['POST'])
def admin_logout():
    """관리자 로그아웃"""
    session.pop('is_admin', None)
    session.pop('admin_id', None)
    return jsonify({'success': True})

@app.route('/admin_response', methods=['POST'])
def admin_response():
    """관리자 답변 저장"""
    if not session.get('is_admin'):
        return jsonify({'success': False, 'message': '관리자 권한이 필요합니다.'})
    
    data = request.get_json()
    suggestion_id = data.get('suggestionId')
    status = data.get('status')
    response = data.get('response')
    
    suggestions = load_suggestions()
    
    # 해당 건의사항 찾아서 업데이트
    for suggestion in suggestions:
        if suggestion['id'] == suggestion_id:
            suggestion['status'] = status
            suggestion['adminResponse'] = response
            suggestion['responseDate'] = datetime.now().strftime('%Y. %m. %d. %H:%M:%S')
            break
    
    save_suggestions(suggestions)
    return jsonify({'success': True})

@app.route('/get_suggestions')
def get_suggestions():
    """건의사항 목록 조회 (AJAX용)"""
    suggestions = load_suggestions()
    category_filter = request.args.get('category', '')
    status_filter = request.args.get('status', '')
    
    # 필터링
    if category_filter:
        suggestions = [s for s in suggestions if s['category'] == category_filter]
    if status_filter:
        suggestions = [s for s in suggestions if s['status'] == status_filter]
    
    return jsonify(suggestions)

if __name__ == '__main__':
    # templates 폴더가 없으면 생성
    if not os.path.exists('templates'):
        os.makedirs('templates')
    
    # HTML 템플릿 파일 생성
    html_template = '''<!DOCTYPE html>
<html lang="ko" class="h-full">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>학교 건의함 - School Suggestion Box</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            box-sizing: border-box;
        }
        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .admin-badge {
            background: linear-gradient(45deg, #ff6b6b, #ee5a24);
        }
        .suggestion-card {
            transition: all 0.3s ease;
        }
        .suggestion-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body class="h-full bg-gradient-to-br from-blue-50 to-indigo-100 font-sans">
    <header class="bg-white shadow-lg">
        <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
            <div class="flex justify-between items-center">
                <div class="flex items-center">
                    <div class="text-3xl mr-3">📮</div>
                    <div>
                        <h1 class="text-2xl font-bold text-gray-800">학교 건의함</h1>
                        <p class="text-sm text-gray-600">여러분의 소중한 의견을 들려주세요</p>
                        <p class="text-xs text-gray-500 mt-1">💡 관리자는 별도 인증이 필요합니다</p>
                    </div>
                </div>
                <div class="flex items-center space-x-4">
                    {% if is_admin %}
                    <div class="admin-badge text-white px-3 py-1 rounded-full text-sm font-semibold flex items-center">
                        <span class="mr-2">👨‍💼</span>
                        관리자 모드 ({{ admin_id }})
                    </div>
                    <button onclick="adminLogout()" class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                        관리자 로그아웃
                    </button>
                    {% else %}
                    <button onclick="showAdminLogin()" class="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                        관리자 로그인
                    </button>
                    {% endif %}
                </div>
            </div>
        </div>
    </header>

    <main class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {% if not is_admin %}
        <!-- Suggestion Form -->
        <div class="bg-white rounded-xl shadow-lg p-8 mb-8 fade-in">
            <h2 class="text-2xl font-bold mb-6 text-gray-800 flex items-center">
                <span class="text-2xl mr-3">✍️</span>
                건의사항 작성
            </h2>
            <form id="suggestion-form" class="space-y-6">
                <div class="grid md:grid-cols-2 gap-6">
                    <div>
                        <label for="student-name" class="block text-sm font-medium text-gray-700 mb-2">이름 (선택사항)</label>
                        <input type="text" id="student-name" name="studentName" placeholder="익명으로 제출하려면 비워두세요" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
                    </div>
                    <div>
                        <label for="student-grade" class="block text-sm font-medium text-gray-700 mb-2">학년/반 (선택사항)</label>
                        <input type="text" id="student-grade" name="studentGrade" placeholder="예: 2학년 3반" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
                    </div>
                </div>
                
                <div>
                    <label for="category" class="block text-sm font-medium text-gray-700 mb-2">건의 분야</label>
                    <select id="category" name="category" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
                        <option value="">분야를 선택해주세요</option>
                        {% for key, config in category_config.items() %}
                        <option value="{{ key }}">{{ config.name }}</option>
                        {% endfor %}
                    </select>
                </div>

                <div>
                    <label for="title" class="block text-sm font-medium text-gray-700 mb-2">제목</label>
                    <input type="text" id="title" name="title" required placeholder="건의사항의 제목을 입력해주세요" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
                </div>

                <div>
                    <label for="content" class="block text-sm font-medium text-gray-700 mb-2">건의 내용</label>
                    <textarea id="content" name="content" rows="6" required placeholder="구체적인 건의사항을 작성해주세요. 현재 상황과 개선 방안을 포함해주시면 더욱 좋습니다." class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"></textarea>
                </div>

                <div class="flex items-center">
                    <input type="checkbox" id="anonymous" name="anonymous" class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded">
                    <label for="anonymous" class="ml-2 block text-sm text-gray-700">익명으로 제출하기</label>
                </div>

                <button type="submit" class="w-full bg-indigo-600 hover:bg-indigo-700 text-white py-3 px-6 rounded-lg font-semibold transition-colors flex items-center justify-center">
                    <span class="mr-2">📤</span>
                    건의사항 제출하기
                </button>
            </form>

            <div id="submit-success" class="hidden mt-6 p-4 bg-green-100 border border-green-400 text-green-700 rounded-lg">
                <div class="flex items-center">
                    <span class="text-xl mr-2">✅</span>
                    <div>
                        <p class="font-semibold">건의사항이 성공적으로 제출되었습니다!</p>
                        <p class="text-sm">검토 후 답변드리겠습니다. 감사합니다.</p>
                    </div>
                </div>
            </div>
        </div>
        {% endif %}

        <!-- Suggestions List -->
        <div class="bg-white rounded-xl shadow-lg p-8 fade-in">
            <div class="flex justify-between items-center mb-6">
                <h2 class="text-2xl font-bold text-gray-800 flex items-center">
                    <span class="text-2xl mr-3">📋</span>
                    건의사항 목록
                </h2>
                <div class="flex items-center space-x-4">
                    <select id="filter-category" onchange="filterSuggestions()" class="px-3 py-2 border border-gray-300 rounded-lg text-sm">
                        <option value="">전체 분야</option>
                        {% for key, config in category_config.items() %}
                        <option value="{{ key }}">{{ config.name }}</option>
                        {% endfor %}
                    </select>
                    <select id="filter-status" onchange="filterSuggestions()" class="px-3 py-2 border border-gray-300 rounded-lg text-sm">
                        <option value="">전체 상태</option>
                        {% for key, config in status_config.items() %}
                        <option value="{{ key }}">{{ config.name }}</option>
                        {% endfor %}
                    </select>
                </div>
            </div>

            <div id="suggestions-container" class="space-y-4">
                <!-- 건의사항이 여기에 동적으로 로드됩니다 -->
            </div>

            <div id="no-suggestions" class="text-center py-12 text-gray-500 {% if suggestions %}hidden{% endif %}">
                <div class="text-6xl mb-4">📭</div>
                <p class="text-lg">아직 건의사항이 없습니다.</p>
                <p class="text-sm">첫 번째 건의사항을 작성해보세요!</p>
            </div>
        </div>
    </main>

    <!-- Admin Login Modal -->
    <div id="admin-login-modal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div class="bg-white rounded-xl shadow-2xl max-w-md w-full mx-4">
            <div class="p-6 border-b border-gray-200">
                <div class="flex justify-between items-center">
                    <h3 class="text-xl font-bold text-gray-800">관리자 로그인</h3>
                    <button onclick="closeAdminLoginModal()" class="text-gray-400 hover:text-gray-600">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>
            <div class="p-6">
                <form id="admin-login-form">
                    <div class="mb-4">
                        <label for="admin-id" class="block text-sm font-medium text-gray-700 mb-2">관리자 아이디</label>
                        <input type="text" id="admin-id" name="adminId" required placeholder="관리자 아이디를 입력하세요" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
                    </div>
                    <div class="mb-4">
                        <label for="admin-password" class="block text-sm font-medium text-gray-700 mb-2">관리자 비밀번호</label>
                        <input type="password" id="admin-password" name="password" required placeholder="관리자 비밀번호를 입력하세요" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
                    </div>
                    <div id="login-error" class="hidden mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded-lg text-sm">
                        아이디 또는 비밀번호가 올바르지 않습니다.
                    </div>
                    <div class="flex justify-end space-x-3">
                        <button type="button" onclick="closeAdminLoginModal()" class="px-4 py-2 text-gray-600 hover:text-gray-800 font-medium">취소</button>
                        <button type="submit" class="bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-2 rounded-lg font-medium transition-colors">로그인</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Admin Response Modal -->
    <div id="admin-modal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div class="bg-white rounded-xl shadow-2xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto">
            <div class="p-6 border-b border-gray-200">
                <div class="flex justify-between items-center">
                    <h3 class="text-xl font-bold text-gray-800">관리자 답변</h3>
                    <button onclick="closeAdminModal()" class="text-gray-400 hover:text-gray-600">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>
            <div class="p-6">
                <div id="modal-suggestion-content" class="mb-6">
                    <!-- 건의사항 내용이 여기에 로드됩니다 -->
                </div>
                <form id="admin-response-form">
                    <input type="hidden" id="suggestion-id" name="suggestionId">
                    <div class="mb-4">
                        <label for="admin-status-select" class="block text-sm font-medium text-gray-700 mb-2">처리 상태</label>
                        <select id="admin-status-select" name="status" required class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
                            {% for key, config in status_config.items() %}
                            <option value="{{ key }}">{{ config.name }}</option>
                            {% endfor %}
                        </select>
                    </div>
                    <div class="mb-6">
                        <label for="admin-response" class="block text-sm font-medium text-gray-700 mb-2">관리자 답변</label>
                        <textarea id="admin-response" name="response" rows="4" required placeholder="학생에게 전달할 답변을 작성해주세요..." class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"></textarea>
                    </div>
                    <div class="flex justify-end space-x-3">
                        <button type="button" onclick="closeAdminModal()" class="px-4 py-2 text-gray-600 hover:text-gray-800 font-medium">취소</button>
                        <button type="submit" class="bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-2 rounded-lg font-medium transition-colors">답변 저장</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        const categoryConfig = {{ category_config | tojson }};
        const statusConfig = {{ status_config | tojson }};
        const isAdmin = {{ is_admin | tojson }};
        let suggestions = {{ suggestions | tojson }};

        // 페이지 로드 시 건의사항 표시
        document.addEventListener('DOMContentLoaded', function() {
            displaySuggestions();
        });

        // 건의사항 제출
        {% if not is_admin %}
        document.getElementById('suggestion-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const data = {
                studentName: formData.get('studentName'),
                studentGrade: formData.get('studentGrade'),
                category: formData.get('category'),
                title: formData.get('title'),
                content: formData.get('content'),
                anonymous: formData.get('anonymous') === 'on'
            };
            
            try {
                const response = await fetch('/submit_suggestion', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    document.getElementById('submit-success').classList.remove('hidden');
                    e.target.reset();
                    
                    // 건의사항 목록 새로고침
                    await loadSuggestions();
                    
                    setTimeout(() => {
                        document.getElementById('submit-success').classList.add('hidden');
                    }, 5000);
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });
        {% endif %}

        // 관리자 로그인
        function showAdminLogin() {
            document.getElementById('admin-login-modal').classList.remove('hidden');
            document.getElementById('login-error').classList.add('hidden');
        }

        function closeAdminLoginModal() {
            document.getElementById('admin-login-modal').classList.add('hidden');
            document.getElementById('admin-id').value = '';
            document.getElementById('admin-password').value = '';
            document.getElementById('login-error').classList.add('hidden');
        }

        document.getElementById('admin-login-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const data = {
                adminId: formData.get('adminId'),
                password: formData.get('password')
            };
            
            try {
                const response = await fetch('/admin_login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    location.reload();
                } else {
                    document.getElementById('login-error').classList.remove('hidden');
                    document.getElementById('admin-password').value = '';
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });

        // 관리자 로그아웃
        async function adminLogout() {
            try {
                await fetch('/admin_logout', {
                    method: 'POST'
                });
                location.reload();
            } catch (error) {
                console.error('Error:', error);
            }
        }

        // 건의사항 목록 로드
        async function loadSuggestions() {
            try {
                const response = await fetch('/get_suggestions');
                suggestions = await response.json();
                displaySuggestions();
            } catch (error) {
                console.error('Error:', error);
            }
        }

        // 건의사항 표시
        function displaySuggestions() {
            const container = document.getElementById('suggestions-container');
            const noSuggestions = document.getElementById('no-suggestions');
            
            if (suggestions.length === 0) {
                container.innerHTML = '';
                noSuggestions.classList.remove('hidden');
                return;
            }
            
            noSuggestions.classList.add('hidden');
            
            const filteredSuggestions = getFilteredSuggestions();
            
            container.innerHTML = filteredSuggestions.map(suggestion => {
                const categoryInfo = categoryConfig[suggestion.category];
                const statusInfo = statusConfig[suggestion.status];
                
                return `
                    <div class="suggestion-card border border-gray-200 rounded-lg p-6 hover:shadow-md transition-all">
                        <div class="flex justify-between items-start mb-4">
                            <div class="flex items-center space-x-3">
                                <span class="text-2xl">${categoryInfo.icon}</span>
                                <div>
                                    <h3 class="text-lg font-semibold text-gray-800">${suggestion.title}</h3>
                                    <div class="flex items-center space-x-2 mt-1">
                                        <span class="px-2 py-1 rounded-full text-xs font-medium ${categoryInfo.color}">${categoryInfo.name}</span>
                                        <span class="px-2 py-1 rounded-full text-xs font-medium ${statusInfo.color}">${statusInfo.name}</span>
                                    </div>
                                </div>
                            </div>
                            <div class="text-right text-sm text-gray-500">
                                <p>${suggestion.createdAt}</p>
                                ${suggestion.studentName !== '익명' ? `<p class="font-medium">${suggestion.studentName}</p>` : ''}
                                ${suggestion.studentGrade ? `<p>${suggestion.studentGrade}</p>` : ''}
                            </div>
                        </div>
                        
                        <div class="mb-4">
                            <p class="text-gray-700 leading-relaxed">${suggestion.content}</p>
                        </div>
                        
                        ${suggestion.adminResponse ? `
                            <div class="bg-green-50 border-l-4 border-green-400 p-4 mt-4">
                                <div class="flex items-center mb-2">
                                    <span class="text-lg mr-2">✅</span>
                                    <span class="font-semibold text-green-800">답변 완료</span>
                                    <span class="text-sm text-green-600 ml-2">${suggestion.responseDate}</span>
                                </div>
                                <p class="text-green-700">${suggestion.adminResponse}</p>
                            </div>
                        ` : `
                            <div class="bg-gray-50 border-l-4 border-gray-300 p-4 mt-4">
                                <div class="flex items-center mb-2">
                                    <span class="text-lg mr-2">⏳</span>
                                    <span class="font-medium text-gray-500">관리자 답변 대기중</span>
                                </div>
                                <p class="text-gray-400 text-sm italic">관리자가 검토 후 답변을 드릴 예정입니다. 조금만 기다려주세요.</p>
                            </div>
                        `}
                        
                        ${isAdmin ? `
                            <div class="mt-4 pt-4 border-t border-gray-200">
                                <button onclick="openAdminModal(${suggestion.id})" class="bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors">
                                    ${suggestion.adminResponse ? '답변 수정' : '답변 작성'}
                                </button>
                            </div>
                        ` : ''}
                    </div>
                `;
            }).join('');
        }

        // 필터링된 건의사항 가져오기
        function getFilteredSuggestions() {
            const categoryFilter = document.getElementById('filter-category').value;
            const statusFilter = document.getElementById('filter-status').value;
            
            return suggestions.filter(suggestion => {
                const categoryMatch = !categoryFilter || suggestion.category === categoryFilter;
                const statusMatch = !statusFilter || suggestion.status === statusFilter;
                return categoryMatch && statusMatch;
            });
        }

        // 필터 적용
        function filterSuggestions() {
            displaySuggestions();
        }

        // 관리자 답변 모달
        function openAdminModal(suggestionId) {
            const suggestion = suggestions.find(s => s.id === suggestionId);
            if (!suggestion) return;
            
            const categoryInfo = categoryConfig[suggestion.category];
            
            document.getElementById('modal-suggestion-content').innerHTML = `
                <div class="bg-gray-50 rounded-lg p-4 mb-4">
                    <div class="flex items-center space-x-2 mb-2">
                        <span class="text-xl">${categoryInfo.icon}</span>
                        <span class="px-2 py-1 rounded-full text-xs font-medium ${categoryInfo.color}">${categoryInfo.name}</span>
                    </div>
                    <h4 class="font-semibold text-lg mb-2">${suggestion.title}</h4>
                    <p class="text-gray-700 mb-2">${suggestion.content}</p>
                    <div class="text-sm text-gray-500">
                        <p>작성자: ${suggestion.studentName} ${suggestion.studentGrade}</p>
                        <p>작성일: ${suggestion.createdAt}</p>
                    </div>
                </div>
            `;
            
            document.getElementById('suggestion-id').value = suggestionId;
            document.getElementById('admin-status-select').value = suggestion.status;
            document.getElementById('admin-response').value = suggestion.adminResponse;
            
            document.getElementById('admin-modal').classList.remove('hidden');
        }

        function closeAdminModal() {
            document.getElementById('admin-modal').classList.add('hidden');
        }

        // 관리자 답변 제출
        document.getElementById('admin-response-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const data = {
                suggestionId: parseInt(formData.get('suggestionId')),
                status: formData.get('status'),
                response: formData.get('response')
            };
            
            try {
                const response = await fetch('/admin_response', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    closeAdminModal();
                    await loadSuggestions();
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });
    </script>
</body>
</html>'''
